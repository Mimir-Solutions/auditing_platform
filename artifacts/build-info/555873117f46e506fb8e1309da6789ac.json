{
  "id": "555873117f46e506fb8e1309da6789ac",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.5",
  "solcLongVersion": "0.7.5+commit.eb77ed08",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/dependencies/holyzeppelin/contracts/security/datatypes/RoleData.sol": {
        "content": "// // SPDX-License-Identifier: AGPL-3.0-or-later\r\npragma solidity 0.7.5;\r\n\r\n// import \"../../dataTypes/collections/AddressSet.sol\";\r\n// import \"../../dataTypes/collections/Bytes32Set.sol\";\r\n\r\n// // TODO: Better description\r\n// // TODO: RoleData - approved bool should be a struct containing data about who approved etc. for more information .\r\n\r\n// /**\r\n//  * @notice Datatype for reuse in the authroization system.\r\n//  */\r\nlibrary RoleData {\r\n\r\n//     using AddressSet for AddressSet.Set;\r\n//     using Bytes32Set for Bytes32Set.Set;\r\n\r\n//     struct Role {\r\n//         bytes32 admin;\r\n//         bytes32 approver;\r\n//         AddressSet.Set members;\r\n//         Bytes32Set.Set restrictedRoles;    // TODO: Loops are evil. Change data struct to some form of mapping?\r\n//         mapping(address => bool) approved;\r\n//     }\r\n\r\n//     struct ContractRoles {\r\n//         bytes32 root;\r\n//         mapping(bytes32 => Role) roles;\r\n//     }\r\n\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/dependencies/holyzeppelin/contracts/security/datatypes/RoleData.sol": {
        "RoleData": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013b0edeeff1e8e97306dbaa4d9c78b1f7540b2281bcb8d8be831f6ff6f683cf264736f6c63430007050033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xB0 0xED 0xEE SELFDESTRUCT 0x1E DUP15 SWAP8 ADDRESS PUSH14 0xBAA4D9C78B1F7540B2281BCB8D8B 0xE8 BALANCE 0xF6 SELFDESTRUCT PUSH16 0x683CF264736F6C634300070500330000 ",
              "sourceMap": "425:518:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122013b0edeeff1e8e97306dbaa4d9c78b1f7540b2281bcb8d8be831f6ff6f683cf264736f6c63430007050033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xB0 0xED 0xEE SELFDESTRUCT 0x1E DUP15 SWAP8 ADDRESS PUSH14 0xBAA4D9C78B1F7540B2281BCB8D8B 0xE8 BALANCE 0xF6 SELFDESTRUCT PUSH16 0x683CF264736F6C634300070500330000 ",
              "sourceMap": "425:518:0:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      }
    },
    "sources": {
      "contracts/dependencies/holyzeppelin/contracts/security/datatypes/RoleData.sol": {
        "ast": {
          "absolutePath": "contracts/dependencies/holyzeppelin/contracts/security/datatypes/RoleData.sol",
          "exportedSymbols": {
            "RoleData": [
              2
            ]
          },
          "id": 3,
          "license": "AGPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "50:22:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2,
              "linearizedBaseContracts": [
                2
              ],
              "name": "RoleData",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 3,
              "src": "425:518:0"
            }
          ],
          "src": "50:895:0"
        },
        "id": 0
      }
    }
  }
}
