{
  "id": "3e5e09a67945c3f1ca470f72f7757d38",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.7.5",
  "solcLongVersion": "0.7.5+commit.eb77ed08",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/dependencies/authorization-platform/contracts/dependencies/holyzeppelin/contracts/security/datatypes/events/RoleBasedAccessControlEvents.sol": {
        "content": "// // SPDX-License-Identifier: AGPL-3.0-or-later\r\npragma solidity 0.7.5;\r\n\r\nlibrary RoleBasedAccessControlEvents {\r\n\r\n//     event RoleAdminChanged( bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole );\r\n\r\n//     event RoleApproverChanged( bytes32 indexed role, bytes32 indexed previousApproverRole, bytes32 indexed newApproverRole );\r\n\r\n//     event RestrictedSharedRoleAdded( bytes32 indexed roleWithRestrictedSharedRole, bytes32 indexed addedRestrictedSharedRole );\r\n\r\n//     event RoleGranted( bytes32 indexed role, address indexed account, address indexed sender );\r\n\r\n//     event RoleApproved( bytes32 indexed role, address indexed approver, address indexed account );\r\n\r\n//     event ApprovalRevoked( bytes32 indexed role, address indexed approver, address indexed disapprovedAccount );\r\n\r\n//     event RoleRevoked( bytes32 indexed role, address indexed account, address indexed sender );\r\n}"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/dependencies/authorization-platform/contracts/dependencies/holyzeppelin/contracts/security/datatypes/events/RoleBasedAccessControlEvents.sol": {
        "RoleBasedAccessControlEvents": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6378b128f397732f33744dbaa86f5caa3e3b464951912929fcdf371c14e066264736f6c63430007050033",
              "opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 CALLDATACOPY DUP12 SLT DUP16 CODECOPY PUSH24 0x32F33744DBAA86F5CAA3E3B464951912929FCDF371C14E06 PUSH3 0x64736F PUSH13 0x63430007050033000000000000 ",
              "sourceMap": "76:858:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a6378b128f397732f33744dbaa86f5caa3e3b464951912929fcdf371c14e066264736f6c63430007050033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 CALLDATACOPY DUP12 SLT DUP16 CODECOPY PUSH24 0x32F33744DBAA86F5CAA3E3B464951912929FCDF371C14E06 PUSH3 0x64736F PUSH13 0x63430007050033000000000000 ",
              "sourceMap": "76:858:0:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      }
    },
    "sources": {
      "contracts/dependencies/authorization-platform/contracts/dependencies/holyzeppelin/contracts/security/datatypes/events/RoleBasedAccessControlEvents.sol": {
        "ast": {
          "absolutePath": "contracts/dependencies/authorization-platform/contracts/dependencies/holyzeppelin/contracts/security/datatypes/events/RoleBasedAccessControlEvents.sol",
          "exportedSymbols": {
            "RoleBasedAccessControlEvents": [
              2
            ]
          },
          "id": 3,
          "license": "AGPL-3.0-or-later",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "0.7",
                ".5"
              ],
              "nodeType": "PragmaDirective",
              "src": "50:22:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2,
              "linearizedBaseContracts": [
                2
              ],
              "name": "RoleBasedAccessControlEvents",
              "nodeType": "ContractDefinition",
              "nodes": [],
              "scope": 3,
              "src": "76:858:0"
            }
          ],
          "src": "50:884:0"
        },
        "id": 0
      }
    }
  }
}
